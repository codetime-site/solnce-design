<?php get_header(); ?>

<?php
//  Template Name: catalog
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π
function get_child_categories($parent_slug, $taxonomy = 'category')
{
    $parent_category = get_term_by('slug', $parent_slug, $taxonomy);
    if (!$parent_category) {
        return [];
    }

    $child_categories = get_terms(array(
        'taxonomy' => $taxonomy,
        'orderby' => 'name',
        'order' => 'ASC',
        'hide_empty' => false,
        'parent' => $parent_category->term_id
    ));

    $options = [];
    if (!is_wp_error($child_categories)) {
        foreach ($child_categories as $category) {
            $options[$category->slug] = $category->name;
        }
    }

    return $options;
}


// –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ WordPress –∫–∞—Ç–µ–≥–æ—Ä–∏–π
// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π WordPress:
$color_options = get_child_categories('col');
$style_options = get_child_categories('style');
$material_options = get_child_categories('materials');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏–∑ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Ç–∞–∫—Å–æ–Ω–æ–º–∏–∏
function get_child_terms($parent_slug, $taxonomy = 'category')
{
    $parent_term = get_term_by('slug', $parent_slug, $taxonomy);
    if (!$parent_term) {
        return [];
    }
    $child_terms = get_terms(array(
        'taxonomy' => $taxonomy,
        'orderby' => 'name',
        'order' => 'ASC',
        'hide_empty' => false,
        'parent' => $parent_term->term_id
    ));
    $options = [];
    if (!is_wp_error($child_terms)) {
        foreach ($child_terms as $term) {
            $options[$term->slug] = $term->name;
        }
    }
    return $options;
}

// –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∑–Ω–∞—á–µ–Ω–∏—è
if (empty($color_options)) {
    $color_options = [
        '–±–µ–ª—ã–π' => '–ë–µ–ª—ã–π',
        '—á–µ—Ä–Ω—ã–π' => '–ß–µ—Ä–Ω—ã–π',
        '—Å–µ—Ä—ã–π' => '–°–µ—Ä—ã–π',
        '–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π' => '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π',
        '–±–µ–∂–µ–≤—ã–π' => '–ë–µ–∂–µ–≤—ã–π',
        '–∫—Ä–∞—Å–Ω—ã–π' => '–ö—Ä–∞—Å–Ω—ã–π',
        '—Å–∏–Ω–∏–π' => '–°–∏–Ω–∏–π',
        '–∑–µ–ª–µ–Ω—ã–π' => '–ó–µ–ª–µ–Ω—ã–π',
        '–∂–µ–ª—Ç—ã–π' => '–ñ–µ–ª—Ç—ã–π',
        '—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π' => '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π',
        '–æ—Ä–∞–Ω–∂–µ–≤—ã–π' => '–û—Ä–∞–Ω–∂–µ–≤—ã–π',
        '—Ä–æ–∑–æ–≤—ã–π' => '–†–æ–∑–æ–≤—ã–π',
        '–∑–æ–ª–æ—Ç–æ–π' => '–ó–æ–ª–æ—Ç–æ–π',
        '—Å–µ—Ä–µ–±—Ä—è–Ω—ã–π' => '–°–µ—Ä–µ–±—Ä—è–Ω—ã–π',
        '–¥—Ä—É–≥–æ–π' => '–î—Ä—É–≥–æ–π'
    ];
}

if (empty($style_options)) {
    $style_options = [
        '–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π' => '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
        '—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π' => '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π',
        '–º–∏–Ω–∏–º–∞–ª–∏–∑–º' => '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º',
        '–ª–æ—Ñ—Ç' => '–õ–æ—Ñ—Ç',
        '—Å–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π' => '–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π',
        '–ø—Ä–æ–≤–∞–Ω—Å' => '–ü—Ä–æ–≤–∞–Ω—Å',
        '–∫–∞–Ω—Ç—Ä–∏' => '–ö–∞–Ω—Ç—Ä–∏',
        '–≤–∏–Ω—Ç–∞–∂' => '–í–∏–Ω—Ç–∞–∂',
        '–∞—Ä—Ç-–¥–µ–∫–æ' => '–ê—Ä—Ç-–¥–µ–∫–æ',
        '—Ö–∞–π-—Ç–µ–∫' => '–•–∞–π-—Ç–µ–∫',
        '—ç–∫–æ' => '–≠–∫–æ',
        '–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π' => '–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–π',
        '–±–∞—Ä–æ–∫–∫–æ' => '–ë–∞—Ä–æ–∫–∫–æ',
        '—Ä–µ–Ω–µ—Å—Å–∞–Ω—Å' => '–†–µ–Ω–µ—Å—Å–∞–Ω—Å',
        '–¥—Ä—É–≥–æ–π' => '–î—Ä—É–≥–æ–π'
    ];
}

if (empty($material_options)) {
    $material_options = [
        '–¥–µ—Ä–µ–≤–æ' => '–î–µ—Ä–µ–≤–æ',
        '–º–µ—Ç–∞–ª–ª' => '–ú–µ—Ç–∞–ª–ª',
        '—Å—Ç–µ–∫–ª–æ' => '–°—Ç–µ–∫–ª–æ',
        '–ø–ª–∞—Å—Ç–∏–∫' => '–ü–ª–∞—Å—Ç–∏–∫',
        '—Ç–∫–∞–Ω—å' => '–¢–∫–∞–Ω—å',
        '–∫–æ–∂–∞' => '–ö–æ–∂–∞',
        '–∫–∞–º–µ–Ω—å' => '–ö–∞–º–µ–Ω—å',
        '–∫–µ—Ä–∞–º–∏–∫–∞' => '–ö–µ—Ä–∞–º–∏–∫–∞',
        '–º—Ä–∞–º–æ—Ä' => '–ú—Ä–∞–º–æ—Ä',
        '–≥—Ä–∞–Ω–∏—Ç' => '–ì—Ä–∞–Ω–∏—Ç',
        '–±–µ—Ç–æ–Ω' => '–ë–µ—Ç–æ–Ω',
        '–±–∞–º–±—É–∫' => '–ë–∞–º–±—É–∫',
        '—Ä–æ—Ç–∞–Ω–≥' => '–†–æ—Ç–∞–Ω–≥',
        '–≤–∏–Ω–∏–ª' => '–í–∏–Ω–∏–ª',
        '–¥—Ä—É–≥–æ–π' => '–î—Ä—É–≥–æ–π'
    ];
}
?>
<?php
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø—Ü–∏–π select
function generate_select_options($options, $default_text)
{ ?>
    <option value=""><?php echo esc_html($default_text); ?></option>
    <?php foreach ($options as $value => $label): ?>
        <option value="<?php echo esc_attr($value); ?>"><?php echo esc_html($label); ?></option>
    <?php endforeach ?>
<?php } ?>

<?php
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ç–∏–ø—É
function get_category_by_type($category_id, $type, $taxonomy = 'category')
{
    $category = get_term($category_id, $taxonomy);
    if (!$category || is_wp_error($category))
        return '';

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    $parent_categories = get_ancestors($category_id, $taxonomy);

    // –ò—â–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω—É–∂–Ω–æ–≥–æ —Ç–∏–ø–∞
    foreach ($parent_categories as $parent_id) {
        $parent = get_term($parent_id, $taxonomy);
        if ($parent && !is_wp_error($parent) && $parent->slug === $type) {
            return $category->slug; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–∞–≥ –¥–æ—á–µ—Ä–Ω–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        }
    }

    return '';
}
?>

<main id="main">
    <?php if (have_rows("flex_page")): ?>
        <?php get_template_part("templates/flex/flex"); ?>
    <?php endif; ?>

    <div class="container">
        <div class="header_block">
            <h2 class="title">–¢–æ–≤–∞—Ä—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π</h2>
            <hr class="title__under">
        </div>

        <div class="block_padding_60"></div>

        <!-- –§–∏–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
        <!-- 
        üõ†Ô∏è –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –§–ò–õ–¨–¢–†–û–í
        
        –í–ê–†–ò–ê–ù–¢ 1: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ WordPress
        –°–æ–∑–¥–∞–π—Ç–µ –≤ WordPress —Å–ª–µ–¥—É—é—â–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:
        1. "–¶–≤–µ—Ç–∞" (slug: col) —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏: –ë–µ–ª—ã–π, –ß–µ—Ä–Ω—ã–π, –°–µ—Ä—ã–π –∏ —Ç.–¥.
        2. "–°—Ç–∏–ª–∏" (slug: style) —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏: –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π, –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ —Ç.–¥.  
        3. "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã" (slug: materials) —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏: –î–µ—Ä–µ–≤–æ, –ú–µ—Ç–∞–ª–ª –∏ —Ç.–¥.
        
        –ó–∞—Ç–µ–º –Ω–∞–∑–Ω–∞—á—å—Ç–µ —Ç–æ–≤–∞—Ä—ã/–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –¥–æ—á–µ—Ä–Ω–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
        -->

        <!-- —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–æ–≤–∞—Ä–∞–º -->
        <div class="category-filter-wrapper">
            <div class="category-filter">
                <h3>–§–∏–ª—å—Ç—Ä –ø–æ —Ç–æ–≤–∞—Ä–∞–º:</h3>
                <div class="filter-controls">
                    <select id="parent-category-filter" class="filter-select">
                        <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                        <?php
                        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
                        $all_categories = get_categories(array(
                            'orderby' => 'name',
                            'order' => 'ASC',
                            'hide_empty' => false
                        ));

                        foreach ($all_categories as $cat) {
                            if ($cat->slug !== 'templates' && $cat->parent == 0) {
                                echo '<option value="' . $cat->term_id . '">' . esc_html($cat->name) . '</option>';
                            }
                        }
                        ?>
                    </select>

                    <select id="subcategory-filter" class="filter-select" disabled style="display:none">
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                    </select>

                    <select id="color-filter" class="filter-select">
                        <?php echo generate_select_options($color_options, '–í—Å–µ —Ü–≤–µ—Ç–∞'); ?>
                    </select>

                    <select id="style-filter" class="filter-select">
                        <?php echo generate_select_options($style_options, '–í—Å–µ —Å—Ç–∏–ª–∏'); ?>
                    </select>

                    <select id="material-filter" class="filter-select">
                        <?php echo generate_select_options($material_options, '–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'); ?>
                    </select>

                    <button id="clear-filters" class="clear-filters-btn">–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</button>
                </div>
            </div>
        </div>

        <!-- –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ -->
        <div class="products-container">
            <div id="products-list" class="products-grid">
                <?php

                // –æ–ø–µ—Ä–µ–¥–µ–ª–µ–Ω–µ–∏ —Ç–µ–∫—É—à–∏–π —Å—Ç—Ä–∞–Ω–∏–µ—Ü—É 
                $paged = get_query_var('paged') ? get_query_var('paged') : 1;

                // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã, –∏—Å–∫–ª—é—á–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—é templates
                $templates_category = get_term_by('slug', 'templates', 'category');
                $args = array(
                    'post_type' => 'post',
                    'post_status' => 'publish',
                    'posts_per_page' => -1,
                    'orderby' => 'date',
                    'order' => 'DESC'
                );

                if ($templates_category && !is_wp_error($templates_category)) {
                    $args['category__not_in'] = array($templates_category->term_id);
                }

                $products_query = new WP_Query($args);

                if ($products_query->have_posts()):
                    while ($products_query->have_posts()):
                        $products_query->the_post();

                        $post_id = get_the_ID();
                        $post_title = get_the_title();
                        $post_excerpt = get_the_excerpt();
                        $post_link = get_permalink();
                        $post_date = get_the_date();

                        $image = '';
                        if (have_rows('flex_page', $post_id)) {
                            while (have_rows('flex_page', $post_id)) {
                                the_row();
                                if (get_row_layout() == 'hero') {
                                    $images = get_sub_field('back_img');
                                    $class_name = get_sub_field('smallbig') ? "hero__backImg_light" : null;
                                    $class_color = get_sub_field('catalog_color') ?: null;

                                    if ($images) {
                                        // –ï—Å–ª–∏ back_img - –º–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ
                                        if (is_array($images) && !empty($images)) {
                                            $image = $images['sizes']['medium'];
                                        } else {
                                            $image = $images;
                                        }
                                    }
                                    break; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                                }
                            }
                        }

                        // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ—Å—Ç–∞
                        $post_categories = get_the_category($post_id);

                        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ—Å—Ç–∞
                        $product_color = '';
                        $product_style = '';
                        $product_material = '';

                        foreach ($post_categories as $cat) {
                            $color = get_category_by_type($cat->term_id, 'col');
                            $style = get_category_by_type($cat->term_id, 'style');
                            $material = get_category_by_type($cat->term_id, 'materials');

                            if (!empty($color))
                                $product_color = $color;
                            if (!empty($style))
                                $product_style = $style;
                            if (!empty($material))
                                $product_material = $material;
                        }

                        // Fallback –∫ –º–µ—Ç–∞-–ø–æ–ª—è–º –ø–æ—Å—Ç–∞
                        if (empty($product_color)) {
                            $product_color = get_post_meta($post_id, 'col', true) ?: '';
                        }
                        if (empty($product_style)) {
                            $product_style = get_post_meta($post_id, 'style', true) ?: '';
                        }
                        if (empty($product_material)) {
                            $product_material = get_post_meta($post_id, 'materials', true) ?: '';
                        }

                        // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ ACF
                        $thumbnail = '';
                        if ($image) {
                            if (is_array($image)) {
                                $thumbnail = esc_url($image['url']);
                            } else {
                                $thumbnail = esc_url($image);
                            }
                        }
                        if (!$thumbnail) {
                            $thumbnail = get_template_directory_uri() . '/assets/img/placeholder.jpg';
                        }

                        // –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –∏–∑ ACF
                        $price = get_field('price', $post_id);
                        $price_value = $price ? floatval($price) : 0;
                        ?>

                        <div class="product-item" data-post-id="<?php echo $post_id; ?>"
                            data-category-ids="<?php echo esc_attr(implode(',', array_column($post_categories, 'term_id'))); ?>"
                            data-color="<?php echo esc_attr(strtolower($product_color)); ?>"
                            data-style="<?php echo esc_attr(strtolower($product_style)); ?>"
                            data-material="<?php echo esc_attr(strtolower($product_material)); ?>"
                            data-price="<?php echo $price_value; ?>"
                            data-title="<?php echo esc_attr(strtolower($post_title)); ?>">

                            <div class="product-image <?php echo esc_attr($class_name) ?>" <?php if ($class_color): ?>
                                    style="background: <?php echo $class_color; ?>;" <?php endif ?>">
                                <img src="<?php echo esc_url($image); ?>" alt="<?php echo esc_attr($post_title); ?>">
                            </div>

                            <div class="product-content">
                                <h3 class="product-title">
                                    <a href="<?php echo esc_url($post_link); ?>"><?php echo esc_html($post_title); ?></a>
                                </h3>

                                <?php if ($price): ?>
                                    <div class="product-price"><?php echo number_format($price_value, 0, ',', ' '); ?> —Ä—É–±.</div>
                                <?php endif; ?>

                                <?php if ($post_excerpt): ?>
                                    <div class="product-excerpt"><?php echo wp_trim_words($post_excerpt, 20); ?></div>
                                <?php endif; ?>

                                <div class="product-meta">
                                    <span class="product-date"><?php echo esc_html($post_date); ?></span>
                                </div>
                            </div>

                            <div class="product-actions">
                                <a href="<?php echo esc_url($post_link); ?>" class="product-link btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                            </div>
                        </div>
                    <?php endwhile ?>


                    <div class="pagination">
                        <? php/*
                        echo paginate_links([
                            'total' => $products_query->max_num_pages,
                            'current' => $paged,
                            'prev_text' => '&laquo; –ù–∞–∑–∞–¥',
                            'next_text' => '–í–ø–µ—Ä—ë–¥ &raquo;',
                        ]);*/
                            ?>
                    </div>

                    <?php wp_reset_postdata();
                else: ?>
                    <div class="no-products">
                        <p>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>
                    </div>
                <?php endif; ?>
            </div>
        </div>
    </div>
</main>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const parentFilter = document.getElementById('parent-category-filter');
        const subcategoryFilter = document.getElementById('subcategory-filter');
        const colorFilter = document.getElementById('color-filter');
        const styleFilter = document.getElementById('style-filter');
        const materialFilter = document.getElementById('material-filter');
        const clearFiltersBtn = document.getElementById('clear-filters');
        const productItems = document.querySelectorAll('.product-item');

        // –î–∞–Ω–Ω—ã–µ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –¥–ª—è JavaScript
        const categoriesData = <?php
        $js_categories = array();
        foreach ($all_categories as $cat) {
            if ($cat->slug !== 'templates') {
                $js_categories[] = array(
                    'id' => $cat->term_id,
                    'name' => $cat->name,
                    'parent' => $cat->parent
                );
            }
        }
        echo json_encode($js_categories);
        ?>;

        // –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        const filters = [parentFilter, subcategoryFilter, colorFilter, styleFilter, materialFilter];

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        filters.forEach(filter => {
            filter.addEventListener('change', function () {
                if (this === parentFilter) {
                    updateSubcategories();
                }
                filterProducts();
            });
        });

        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
        function updateSubcategories() {
            const parentId = parentFilter.value;
            subcategoryFilter.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>';

            if (parentId) {
                subcategoryFilter.disabled = false;
                const subcategories = categoriesData.filter(cat => cat.parent == parentId);
                subcategories.forEach(cat => {
                    const option = document.createElement('option');
                    option.value = cat.id;
                    option.textContent = cat.name;
                    subcategoryFilter.appendChild(option);
                });
            } else {
                subcategoryFilter.disabled = true;
            }
        }

        // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
        function filterProducts() {
            const filterValues = {
                parent: parentFilter.value,
                subcategory: subcategoryFilter.value,
                color: colorFilter.value.toLowerCase(),
                style: styleFilter.value.toLowerCase(),
                material: materialFilter.value.toLowerCase()
            };

            let visibleCount = 0;

            productItems.forEach(item => {
                const itemData = {
                    postId: item.dataset.postId,
                    color: item.dataset.color.toLowerCase(),
                    style: item.dataset.style.toLowerCase(),
                    material: item.dataset.material.toLowerCase()
                };

                let show = true;

                // –§–∏–ª—å—Ç—Ä—ã –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º (—Ü–≤–µ—Ç, —Å—Ç–∏–ª—å, –º–∞—Ç–µ—Ä–∏–∞–ª) - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                const attributeFilters = ['color', 'style', 'material'];
                for (const attr of attributeFilters) {
                    if (filterValues[attr] && itemData[attr] && itemData[attr] !== '') {
                        // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–ª—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
                        show = itemData[attr] === filterValues[attr];
                        if (!show) break;
                    }
                }

                // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                if (show && (filterValues.parent || filterValues.subcategory)) {
                    const itemCategoryIds = item.dataset.categoryIds ? item.dataset.categoryIds.split(',') : [];
                    let categoryMatch = false;

                    if (filterValues.subcategory) {
                        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                        categoryMatch = itemCategoryIds.includes(filterValues.subcategory);
                    } else if (filterValues.parent) {
                        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–Ω–∞ –∏–ª–∏ –µ–µ –ø–æ—Ç–æ–º–∫–∏
                        categoryMatch = itemCategoryIds.some(id => {
                            const catId = parseInt(id);
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ—Ç–æ–º–∫–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π
                            return categoriesData.some(cat => cat.id == catId && (cat.id == filterValues.parent || cat.parent == filterValues.parent));
                        });
                    }

                    if (!categoryMatch) {
                        show = false;
                    }
                }

                if (show) {
                    item.classList.remove('hidden');
                    visibleCount++;
                } else {
                    item.classList.add('hidden');
                }
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            let noResultsMsg = document.querySelector('.no-results');

            if (visibleCount === 0) {
                if (!noResultsMsg) {
                    noResultsMsg = document.createElement('div');
                    noResultsMsg.className = 'no-results';
                    noResultsMsg.textContent = '–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º';
                    document.getElementById('products-list').appendChild(noResultsMsg);
                }
            } else if (noResultsMsg) {
                noResultsMsg.remove();
            }
        }

        // –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
        clearFiltersBtn.addEventListener('click', function () {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
            filters.forEach(filter => {
                filter.value = '';
            });

            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            subcategoryFilter.disabled = true;
            subcategoryFilter.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>';

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
            productItems.forEach(item => {
                item.classList.remove('hidden');
            });

            // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            const noResultsMsg = document.querySelector('.no-results');
            if (noResultsMsg) {
                noResultsMsg.remove();
            }
        });
    });
</script>
<?php get_footer(); ?>
<!-- 
<style>
    .pagination {
        background: red;
        padding: 15px;
        display: flex;
        gap: 14px;
    }

    a.prev.page-numbers {
        background: #3d1cb9;
        color: white;
    }

    a.next.page-numbers {
        background: green;
    }
</style> -->