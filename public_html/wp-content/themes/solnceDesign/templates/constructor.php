
<section id="main">
    <div class="header">
        <h1>üè† –£–º–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞</h1>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–º–Ω–∞—Ç—ã –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—å–µ—Ä</p>

        <!-- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–æ–º–Ω–∞—Ç—ã -->
        <div class="room-selector">
            <button class="room-button active" data-room="livingroom">üõãÔ∏è –ì–æ—Å—Ç–∏–Ω–∞—è</button>
            <button class="room-button" data-room="kitchen">üç≥ –ö—É—Ö–Ω—è</button>
            <button class="room-button" data-room="bedroom">üõèÔ∏è –°–ø–∞–ª—å–Ω—è</button>
        </div>

        <!-- –ü–æ–¥–º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -->
        <div class="category-selector">
            <button class="category-button active" data-category="furniture">ü™ë –ú–µ–±–µ–ª—å</button>
            <button class="category-button" data-category="decor">üñºÔ∏è –î–µ–∫–æ—Ä</button>
            <button class="category-button" data-category="chair">ü™ë –ö—Ä–µ—Å–ª–æ</button>
            <button class="category-button" data-category="ceiling">üí° –ü–æ—Ç–æ–ª–∫–∏</button>
        </div>
    </div>

    <div class="constructor-container">
        <div class="panel left-panel">
            <div class="elements-grid" id="elements-grid">
                <!-- –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –º–∏–Ω–∏–∞—Ç—é—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ -->
            </div>
        </div>

        <div class="panel center-panel">
            <div class="scene-container">
                <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                <div class="scene-bg" id="scene-bg"></div>

                <!-- –ó–æ–Ω—ã –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ -->
                <div class="zone floor-zone" id="floor-zone"></div>
                <div class="zone wall-zone" id="wall-zone"></div>
                <div class="zone ceiling-zone" id="ceiling-zone"></div>
            </div>

            <div class="controls">
                <button class="control-button" onclick="saveDesignAsPhoto()">üì∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ —Ñ–æ—Ç–æ</button>
                <button class="control-button" onclick="uploadDesignPhoto()">üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ</button>
                <button class="control-button" onclick="sendRequest()">üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
                <button class="control-button" onclick="toggleDebugMode()">üîç –ü–æ–∫–∞–∑–∞—Ç—å –∑–æ–Ω—ã</button>
            </div>

            <!-- –§–æ—Ä–º–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π -->
            <div class="photo-upload-form" id="photo-upload-form" style="display: none;">
                <h3>–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –¥–∏–∑–∞–π–Ω–∞</h3>
                <input type="file" id="photo-input" accept="image/*" multiple>
                <button class="control-button" onclick="processUploadedPhotos()">–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ</button>
                <button class="control-button" onclick="closePhotoForm()">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>

            <div class="room-info">
                <h3 id="current-room-title">–ì–æ—Å—Ç–∏–Ω–∞—è</h3>
                <p id="current-category-title">–ú–µ–±–µ–ª—å</p>
            </div>
        </div>

        <div class="panel right-panel">
            <div class="element-details" id="element-details">
                <h3>–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç</h3>
                <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç —Å–ª–µ–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π</p>
            </div>
        </div>
    </div>

    <!-- –§–æ—Ä–º–∞ —Å–±—Ä–æ—Å–∞ –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
    <div class="reset-form">
        <div class="reset-container">
            <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏–∑–∞–π–Ω–æ–º</h3>
            <div class="reset-buttons">
                <button class="reset-button" onclick="resetCurrentRoom()">üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–º–Ω–∞—Ç—É</button>
                <button class="reset-button danger" onclick="resetAllRooms()">üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã</button>
                <button class="reset-button" onclick="exportAllDesigns()">üíæ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∏–∑–∞–π–Ω–æ–≤</button>
            </div>
        </div>
    </div>
</section>
<script>
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–º–Ω–∞—Ç –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    var dirUri = "<?php echo get_template_directory_uri(); ?>";

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–º–Ω–∞—Ç —Å —Ñ–æ–Ω–æ–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    const roomConfig = {
        livingroom: {
            name: '–ì–æ—Å—Ç–∏–Ω–∞—è',
            background: 'http://solnce-design.ru/wp-content/uploads/2025/10/gest.jpg',
            categories: ['furniture', 'decor', 'chair', 'ceiling'],
            zones: {
                furniture: { bottom: '50px', left: '180px', width: '200px', height: '150px' },
                decor: { top: '100px', left: '250px', width: '150px', height: '100px' },
                chair: { bottom: '40px', right: '150px', width: '120px', height: '120px' },
                ceiling: { top: '30px', left: '50%', transform: 'translateX(-50%)', width: '100px', height: '80px' }
            }
        },
        kitchen: {
            name: '–ö—É—Ö–Ω—è',
            background: 'http://solnce-design.ru/wp-content/uploads/2025/10/kuhnya1con.jpg',
            categories: ['furniture', 'chair', 'ceiling'], // –¥–µ–∫–æ—Ä —Å–∫—Ä—ã—Ç
            zones: {
                furniture: { bottom: '40px', left: '200px', width: '180px', height: '140px' },
                chair: { bottom: '40px', right: '150px', width: '100px', height: '100px' },
                ceiling: { top: '30px', left: '50%', transform: 'translateX(-50%)', width: '100px', height: '80px' }
            }
        },
        bedroom: {
            name: '–°–ø–∞–ª—å–Ω—è',
            background: 'http://solnce-design.ru/wp-content/uploads/2025/10/bedroom.jpg',
            categories: ['furniture', 'decor', 'ceiling'],
            zones: {
                furniture: { bottom: '40px', left: '100px', width: '220px', height: '160px' },
                decor: { top: '120px', left: '150px', width: '120px', height: '80px' },
                ceiling: { top: '20px', left: '50%', transform: 'translateX(-50%)', width: '100px', height: '80px' }
            }
        }
    };

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const elementsConfig = {
        furniture: {
            sofa: {
                name: '–î–∏–≤–∞–Ω',
                image: 'https://images.unsplash.com/photo-1555041469-a586c61ea9bc?auto=format&fit=crop&w=200&q=80'
            },
            table: {
                name: '–°—Ç–æ–ª',
                image: 'https://images.unsplash.com/photo-1549497538-303791108f95?auto=format&fit=crop&w=200&q=80'
            },
            bed: {
                name: '–ö—Ä–æ–≤–∞—Ç—å',
                image: 'https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?auto=format&fit=crop&w=200&q=80'
            },
            wardrobe: {
                name: '–®–∫–∞—Ñ',
                image: `${dirUri}/images/cabinet_wardrobe.png`
            }
        },
        decor: {
            painting: {
                name: '–ö–∞—Ä—Ç–∏–Ω–∞',
                image: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?auto=format&fit=crop&w=200&q=80'
            },
            plants: {
                name: '–†–∞—Å—Ç–µ–Ω–∏—è',
                image: 'https://images.unsplash.com/photo-1493957988430-a5f2e15f39a3?auto=format&fit=crop&w=200&q=80'
            },
            mirror: {
                name: '–ó–µ—Ä–∫–∞–ª–æ',
                image: 'https://images.unsplash.com/photo-1618220179428-22790b461013?auto=format&fit=crop&w=200&q=80'
            }
        },
        chair: {
            armchair: {
                name: '–ö—Ä–µ—Å–ª–æ',
                image: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?auto=format&fit=crop&w=200&q=80'
            },
            diningchair: {
                name: '–°—Ç—É–ª',
                image: 'https://images.unsplash.com/photo-1549497538-303791108f95?auto=format&fit=crop&w=200&q=80'
            },
            officechair: {
                name: '–û—Ñ–∏—Å–Ω–æ–µ –∫—Ä–µ—Å–ª–æ',
                image: 'https://images.unsplash.com/photo-1541558869434-2840d308329a?auto=format&fit=crop&w=200&q=80'
            }
        },
        ceiling: {
            chandelier: {
                name: '–õ—é—Å—Ç—Ä–∞',
                image: 'https://images.unsplash.com/photo-1524634126442-357e0eac3c14?auto=format&fit=crop&w=200&q=80'
            },
            spotlight: {
                name: '–¢–æ—á–µ—á–Ω—ã–µ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏',
                image: `${dirUri}/images/lighting_ceiling.png`
            },
            led: {
                name: 'LED –ø–æ–¥—Å–≤–µ—Ç–∫–∞',
                image: 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?auto=format&fit=crop&w=200&q=80'
            }
        }
    };

    // –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
    let currentRoom = 'livingroom';
    let currentCategory = 'furniture';
    let currentState = {
        livingroom: { furniture: null, decor: null, chair: null, ceiling: null },
        kitchen: { furniture: null, chair: null, ceiling: null },
        bedroom: { furniture: null, decor: null, ceiling: null }
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    document.addEventListener('DOMContentLoaded', function () {
        loadState();
        initializeRoom();
        attachEventListeners();
        hideLoading();
    });

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
    function loadState() {
        const savedState = localStorage.getItem('interiorDesign');
        if (savedState) {
            const data = JSON.parse(savedState);
            currentState = data.state || currentState;
            currentRoom = data.room || currentRoom;
            currentCategory = data.category || currentCategory;
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
    function saveState() {
        const data = {
            state: currentState,
            room: currentRoom,
            category: currentCategory
        };
        localStorage.setItem('interiorDesign', JSON.stringify(data));
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–Ω–∞—Ç—ã
    function initializeRoom() {
        switchRoom(currentRoom);
        switchCategory(currentCategory);
    }

    // –°–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    function hideLoading() {
        const loading = document.querySelector('.loading');
        if (loading) {
            loading.style.display = 'none';
        }
    }

    // –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function attachEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–æ–º–Ω–∞—Ç
        const roomButtons = document.querySelectorAll('.room-button');
        roomButtons.forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const room = this.dataset.room;
                switchRoom(room);
            });
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const categoryButtons = document.querySelectorAll('.category-button');
        categoryButtons.forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const category = this.dataset.category;
                switchCategory(category);
            });
        });
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    function switchRoom(roomId) {
        currentRoom = roomId;
        const room = roomConfig[roomId];

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–Ω
        const sceneBg = document.getElementById('scene-bg');
        sceneBg.style.backgroundImage = `url('${room.background}')`;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        document.getElementById('current-room-title').textContent = room.name;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –∫–æ–º–Ω–∞—Ç—ã
        document.querySelectorAll('.room-button').forEach(btn => btn.classList.remove('active'));
        document.querySelector(`[data-room="${roomId}"]`).classList.add('active');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        updateCategoryVisibility(room.categories);

        // –û—á–∏—â–∞–µ–º –≤—Å–µ –∑–æ–Ω—ã
        clearAllZones();

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–æ–º–Ω–∞—Ç—ã
        restoreRoomElements();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ç–∫—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        updateElementsGrid();

        saveState();
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    function switchCategory(categoryId) {
        currentCategory = categoryId;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const categoryNames = {
            furniture: '–ú–µ–±–µ–ª—å',
            decor: '–î–µ–∫–æ—Ä',
            chair: '–ö—Ä–µ—Å–ª–æ',
            ceiling: '–ü–æ—Ç–æ–ª–∫–∏'
        };
        document.getElementById('current-category-title').textContent = categoryNames[categoryId];

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        document.querySelectorAll('.category-button').forEach(btn => btn.classList.remove('active'));
        const categoryBtn = document.querySelector(`[data-category="${categoryId}"]`);
        if (categoryBtn) categoryBtn.classList.add('active');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ç–∫—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        updateElementsGrid();

        saveState();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    function updateCategoryVisibility(availableCategories) {
        document.querySelectorAll('.category-button').forEach(btn => {
            const category = btn.dataset.category;
            if (availableCategories.includes(category)) {
                btn.classList.remove('hidden');
            } else {
                btn.classList.add('hidden');
            }
        });

        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å–∫—Ä—ã—Ç–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é
        if (!availableCategories.includes(currentCategory)) {
            switchCategory(availableCategories[0]);
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    function updateElementsGrid() {
        const grid = document.getElementById('elements-grid');
        grid.innerHTML = '';

        const elements = elementsConfig[currentCategory];
        if (!elements) return;

        Object.keys(elements).forEach(elementId => {
            const element = elements[elementId];
            const item = createElementItem(elementId, element);
            grid.appendChild(item);
        });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–µ—Ç–∫–µ
    function createElementItem(elementId, element) {
        const item = document.createElement('div');
        item.className = 'element-item';
        item.dataset.elementId = elementId;
        item.dataset.category = currentCategory;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç
        if (currentState[currentRoom][currentCategory] === elementId) {
            item.classList.add('selected');
        }

        item.innerHTML = `
                <div class="element-thumbnail" style="background-image: url('${element.image}')"></div>
                <div class="element-name">${element.name}</div>
            `;

        item.addEventListener('click', function () {
            selectElement(elementId, currentCategory);
        });

        return item;
    }

    // –í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
    function selectElement(elementId, category) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        currentState[currentRoom][category] = elementId;

        // –†–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ
        placeElementInZone(elementId, category);

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤ —Å–µ—Ç–∫–µ
        document.querySelectorAll('.element-item').forEach(item => item.classList.remove('selected'));
        document.querySelector(`[data-element-id="${elementId}"]`).classList.add('selected');

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
        updateElementDetails(elementId, category);

        saveState();
    }

    // –†–∞–∑–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∑–æ–Ω–µ
    function placeElementInZone(elementId, category) {
        const room = roomConfig[currentRoom];
        const element = elementsConfig[category][elementId];
        const zoneConfig = room.zones[category];

        if (!zoneConfig || !element) return;

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const existingElement = document.querySelector(`[data-category="${category}"][data-room="${currentRoom}"]`);
        if (existingElement) {
            existingElement.remove();
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        const img = document.createElement('img');
        img.src = element.image;
        img.className = 'zone-element fade-in';
        img.dataset.category = category;
        img.dataset.room = currentRoom;
        img.dataset.elementId = elementId;

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
        Object.keys(zoneConfig).forEach(prop => {
            img.style[prop] = zoneConfig[prop];
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∑–æ–Ω—É
        const zone = document.querySelector('.scene-container');
        zone.appendChild(img);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
        img.onerror = function () {
            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${element.image}`);
            this.style.background = 'rgba(200, 200, 200, 0.5)';
            this.style.border = '2px dashed #ccc';
        };
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–∞
    function updateElementDetails(elementId, category) {
        const element = elementsConfig[category][elementId];
        const details = document.getElementById('element-details');

        details.innerHTML = `
                <h3>${element.name}</h3>
                <div class="element-thumbnail" style="background-image: url('${element.image}'); width: 100px; height: 80px; margin: 10px 0;"></div>
                <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${getCategoryName(category)}</p>
                <p><strong>–ö–æ–º–Ω–∞—Ç–∞:</strong> ${roomConfig[currentRoom].name}</p>
                <button class="control-button" onclick="removeElement('${category}')" style="margin-top: 10px;">–£–±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç</button>
            `;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    function getCategoryName(category) {
        const names = {
            furniture: '–ú–µ–±–µ–ª—å',
            decor: '–î–µ–∫–æ—Ä',
            chair: '–ö—Ä–µ—Å–ª–æ',
            ceiling: '–ü–æ—Ç–æ–ª–∫–∏'
        };
        return names[category] || category;
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    function removeElement(category) {
        currentState[currentRoom][category] = null;

        // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∑–æ–Ω—ã
        const element = document.querySelector(`[data-category="${category}"][data-room="${currentRoom}"]`);
        if (element) {
            element.classList.add('fade-out');
            setTimeout(() => element.remove(), 300);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ç–∫—É –∏ –¥–µ—Ç–∞–ª–∏
        updateElementsGrid();
        document.getElementById('element-details').innerHTML = `
                <h3>–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç</h3>
                <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç —Å–ª–µ–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π</p>
            `;

        saveState();
    }

    // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∑–æ–Ω
    function clearAllZones() {
        const elements = document.querySelectorAll('.zone-element');
        elements.forEach(element => element.remove());
    }

    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–º–Ω–∞—Ç—ã
    function restoreRoomElements() {
        const roomState = currentState[currentRoom];
        Object.keys(roomState).forEach(category => {
            const elementId = roomState[category];
            if (elementId) {
                placeElementInZone(elementId, category);
            }
        });
    }


    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∏–∑–∞–π–Ω–∞
    function saveDesign() {
        const designData = {
            timestamp: new Date().toISOString(),
            room: currentRoom,
            category: currentCategory,
            state: currentState,
            totalPrice: calculateTotalPrice()
        };

        const blob = new Blob([JSON.stringify(designData, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `interior-design-${currentRoom}-${Date.now()}.json`;
        a.click();
        URL.revokeObjectURL(url);

        alert('–î–∏–∑–∞–π–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä.');
    }

    // –°–±—Ä–æ—Å –¥–∏–∑–∞–π–Ω–∞
    function resetDesign() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–Ω–∞—Ç?')) {
            // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–Ω–∞—Ç
            currentState = {
                livingroom: { furniture: null, decor: null, chair: null, ceiling: null },
                kitchen: { furniture: null, chair: null, ceiling: null },
                bedroom: { furniture: null, decor: null, ceiling: null }
            };

            // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∑–æ–Ω
            clearAllZones();

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            updateElementsGrid();
            document.getElementById('element-details').innerHTML = `
                    <h3>–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç</h3>
                    <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç —Å–ª–µ–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π</p>
                `;

            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            saveState();

            alert('–î–∏–∑–∞–π–Ω —Å–±—Ä–æ—à–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–Ω–∞—Ç!');
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏
    function sendRequest() {
        const requestData = {
            room: currentRoom,
            roomName: roomConfig[currentRoom].name,
            elements: currentState[currentRoom],
            totalPrice: calculateTotalPrice(),
            timestamp: new Date().toISOString()
        };

        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏:', requestData);

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∫–∞–∑–∞
        let elementsText = '';
        Object.keys(currentState[currentRoom]).forEach(category => {
            const elementId = currentState[currentRoom][category];
            if (elementId && elementsConfig[category] && elementsConfig[category][elementId]) {
                const element = elementsConfig[category][elementId];
                elementsText += `‚Ä¢ ${getCategoryName(category)}: ${element.name} (${element.price.toLocaleString('ru-RU')} ‚ÇΩ)\n`;
            }
        });

        alert(`–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n\n–ö–æ–º–Ω–∞—Ç–∞: ${roomConfig[currentRoom].name}\n\n–í—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:\n${elementsText || '–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ'}\n\n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${calculateTotalPrice().toLocaleString('ru-RU')} ‚ÇΩ`);
    }

    // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function downloadImage() {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');

        canvas.width = 800;
        canvas.height = 600;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ–Ω
        ctx.fillStyle = '#f0f0f0';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        ctx.fillStyle = '#333';
        ctx.font = 'bold 24px Arial';
        ctx.fillText(`–î–∏–∑–∞–π–Ω –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ - ${roomConfig[currentRoom].name}`, 20, 40);

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        ctx.font = '16px Arial';
        let y = 80;
        Object.keys(currentState[currentRoom]).forEach(category => {
            const elementId = currentState[currentRoom][category];
            if (elementId && elementsConfig[category] && elementsConfig[category][elementId]) {
                const element = elementsConfig[category][elementId];
                ctx.fillText(`${getCategoryName(category)}: ${element.name}`, 20, y);
                y += 25;
            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–Ω—É
        ctx.font = 'bold 20px Arial';
        ctx.fillText(`–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${calculateTotalPrice().toLocaleString('ru-RU')} ‚ÇΩ`, 20, y + 30);

        // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        canvas.toBlob(function (blob) {
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `interior-design-${currentRoom}-${Date.now()}.png`;
            a.click();
            URL.revokeObjectURL(url);
        });

        alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
    }

    // –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–æ–Ω
    let debugMode = false;
    function toggleDebugMode() {
        debugMode = !debugMode;
        const zones = document.querySelectorAll('.zone');
        const button = event.target;

        if (debugMode) {
            zones.forEach(zone => zone.classList.add('debug'));
            button.textContent = 'üîç –°–∫—Ä—ã—Ç—å –∑–æ–Ω—ã';
            button.style.background = 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)';
        } else {
            zones.forEach(zone => zone.classList.remove('debug'));
            button.textContent = 'üîç –ü–æ–∫–∞–∑–∞—Ç—å –∑–æ–Ω—ã';
            button.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    function getStateInfo() {
        return {
            currentRoom: currentRoom,
            currentCategory: currentCategory,
            roomState: currentState[currentRoom],
            totalPrice: calculateTotalPrice(),
            roomConfig: roomConfig[currentRoom]
        };
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∞–≤–∏—à–∏ F12 (—Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞)
    document.addEventListener('keydown', function (e) {
        if (e.key === 'F12') {
            e.preventDefault();
            console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞:', getStateInfo());
            toggleDebugMode();
        }
    });
</script>

